name: Build and Push Docker Images

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'docker/**'
  workflow_run:
    workflows: ["Build and Release ODR Artifacts"]
    types:
      - completed

env:
  REGISTRY: ghcr.io
  ORGANIZATION: oszuidwest
  PADENC_VERSION: v3.1.0
  AUDIOENC_VERSION: v3.6.0

jobs:
  build-docker-padenc:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch || github.ref }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/odr-padenc
          tags: |
            type=semver,pattern={{version}},value=${{ env.PADENC_VERSION }}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/odr-padenc-debian.Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=${{ env.PADENC_VERSION }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-docker-audioenc-minimal:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch || github.ref }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/odr-audioenc-minimal
          tags: |
            type=semver,pattern={{version}},value=${{ env.AUDIOENC_VERSION }}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/odr-audioenc-minimal-debian.Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=${{ env.AUDIOENC_VERSION }}
            VARIANT=minimal
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-docker-audioenc-full:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch || github.ref }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/odr-audioenc-full
          tags: |
            type=semver,pattern={{version}},value=${{ env.AUDIOENC_VERSION }}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/odr-audioenc-full-debian.Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=${{ env.AUDIOENC_VERSION }}
            VARIANT=full
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}